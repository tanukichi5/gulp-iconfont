/*

アイコンフォントのスタイルです。

*/

// 生成したアイコンフォントを読み込む
@font-face {
	font-family: "<%= fontName %>";
	src: url('<%= fontPath %><%= fontName %>.eot?<%= timestamp %>');
	src: url('<%= fontPath %><%= fontName %>.eot?#iefix') format('eot'),
		url('<%= fontPath %><%= fontName %>.woff?<%= timestamp %>') format('woff'),
		url('<%= fontPath %><%= fontName %>.ttf?<%= timestamp %>') format('truetype'),
		url('<%= fontPath %><%= fontName %>.svg#<%= fontName %>') format('svg');
	font-weight: normal;
	font-style: normal;
	font-display: block;
}

// アイコンフォントの共通スタイル
:where(.<%= className %>) {
	display: inline-block;
	font-family: "<%= fontName %>";
	font-style: normal;
	font-weight: normal;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

// アイコンフォントを表示する疑似要素
<% _.each(glyphs, function(glyph) { %>.<%= className %>-<%= glyph.name.slice(0) %>:before { content: "\<%= glyph.unicode[0].charCodeAt(0).toString(16).toUpperCase() %>" }
<% }); %>

// unicode変数
$iconfonts: (
	<% _.each(glyphs, function(glyph) { %>'<%= glyph.name.slice(0) %>': \<%= glyph.unicode[0].charCodeAt(0).toString(16).toUpperCase() %>,
	<% }); %>
)!default;
